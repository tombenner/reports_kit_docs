.row
  .col-md-12
    = render_report example.file do |r, f|
      - if example.view
        = r.form do |f|
          = Haml::Engine.new(example.view).render(self, { f: f, r: r })
        %br
        %br
    %br
    %hr
.row
  .col-md-7
.row
  .col-md-7
    %p
      %em To create the chart above, simply add the following YAML file and call <code>render_report</code> in any view:
    %h4 Config
    %p
      %code
        = example.display_yaml_path
    %pre
      = preserve do
        = example.config.to_yaml.gsub(/^---/, '')
    - keys = %w(type datasets options)
    - existing_keys = keys.select { |key| example.config.to_yaml.include?(" #{key}:") }
    - if existing_keys.present?
      %p
        %small
          %em Note: The #{existing_keys.map { |key| %|"chart.#{key}"| }.to_sentence } #{'option'.pluralize(existing_keys.length)} #{ existing_keys.length > 1 ? 'are' : 'is' } passed to #{ link_to 'Chart.js', 'http://www.chartjs.org/' }, so any values supported by Chart.js are supported here, too.
    %br
    %h4 View
    %p
      %code
        = "app/views/my_controller/my_view.html.haml"
    %pre
      = preserve do
        - if example.view
          = "= render_report '#{example.key}' do |report|\n  = report.form do |f|\n    " + example.view.gsub("\n", "\n    ") + "\n    "
        - else
          = "= render_report '#{example.key}'"
  .col-md-5
    %h4 Model
    - model_path = "app/models/#{example.model_filename}.rb"
    - model_content = File.read(Rails.root.join(model_path))
    %p
      %code
        = model_path
    %pre
      = model_content
    %br
    %h4 Model's Columns
    - model = example.model_filename.camelize.constantize
    %pre
      - model.columns.each do |column|
        = "#{column.name.ljust(15)} #{column.type}"
        \
